
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:3306/${DB_SCHEMA:hr}?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=${DB_USERNAME:homestead}
spring.datasource.password=${DB_PASSWORD:secret}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.hibernate.ddl-auto = none

#logging.level.org.springframework=debug

spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================ocume

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.format_sql=true
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entixties found in
# the project
spring.jpa.hibernate.ddl-auto = update
aws.accessKeyId=""
aws.secretKey=""
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
#to enable data initialization using schema.sql or data.sql, required for spring 2.0
#spring.datasource.initialization-mode=always
#App ports
server.port= 8080
#server.port= 8080
# Enable response compression
server.compression.enabled=true

# Minimum response where compression will kick in
server.compression.min-response-size=2048

# Mime types that should be compressed
server.compression.mime-types=text/html, text/xml, text/plain, text/css, text/javascript, application/javascript,font/woff2,image/svg+xml, application/json


#server.http2.enabled=true
spring.servlet.multipart.enabled = true

#Smtp mail setting
spring.mail.host=127.0.0.1
spring.mail.port=1025
spring.mail.username=testuser
spring.mail.password=testpwd
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.starttls.enable=true

spring.liquibase.enabled=true


# Other mail properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

spring.resources.add-mappings=true

spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

vapid.key.public=BNliFSdboImcdgEUq4XVoC_pEfolP5-4z2dY8zDmlHyOphWZBVRmVnUL92gGF9XOzOmrknYzKk5MHS_lJgzsoRQ
vapid.key.private=0QMHFKXrLjEi4RvCZcfBKE5jFmThIi1etJ0v5eHx8KU

minio.end.point=https://play.min.io
minio.access.key=Q3AM3UQ867SPQQA43P2F
minio.secret.key=zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG

#logging configuration
#logging.file=vue-chat.log
#logging.path=C:\\Users\\OMEN15

#actuator config
#management.endpoints.web.exposure.include=*
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.liquibase.change-log=classpath:db/db.changelog-master.xml


spring.jackson.default-property-inclusion=non_null
spring.jackson.serialization.indent_output=true 

# The format used for the keystore. It could be set to JKS in case it is a JKS file
#server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
#server.ssl.key-store=${SERVER_KEYSTORE:classpath:keystore/hrapp.p12 SERVER_KEYSTORE}
# The password used to generate the certificate
#server.ssl.key-store-password=${SERVER_KEYSTORE_PASS:secret SERVER_KEYSTORE_PASS}
# The alias mapped to the certificate
#server.ssl.key-alias=hrapp-key
spring.jpa.hibernate.naming.implicit-strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

logging.level.com.ogoma.hr_core=DEBUG
#debug= true
